/*1-- Tạo danh sách tất cả chi phí thay thế (replacement costs)  khác nhau của các film.
Question: Chi phí thay thế thấp nhất là bao nhiêu?*-->> 9.99/

SELECT
film_id,
replacement_cost
FROM film
ORDER BY replacement_cost;

/*2-- Viết một truy vấn cung cấp cái nhìn tổng quan về số lượng phim có chi phí thay thế trong các phạm vi chi phí sau
1.	low: 9.99 - 19.99
2.	medium: 20.00 - 24.99
3.	high: 25.00 - 29.99
Question: Có bao nhiêu phim có chi phí thay thế thuộc nhóm “low”? -->> 514 */

SELECT
CASE
	WHEN replacement_cost BETWEEN 9.99 AND 19.99 THEN 'Low'
	WHEN replacement_cost BETWEEN 20.00 AND 24.99 THEN 'Medium'
	WHEN replacement_cost BETWEEN 25.00 AND 29.99 THEN 'High'
END AS cost_range,
COUNT(film_id)
FROM film
GROUP BY cost_range
ORDER BY COUNT(film_id);

/*3--Tạo danh sách các film_title  bao gồm tiêu đề (title), độ dài (length) và tên danh mục (category_name) được sắp xếp theo độ dài giảm dần. Lọc kết quả để chỉ các phim trong danh mục 'Drama' hoặc 'Sports'.
Question: Phim dài nhất thuộc thể loại nào và dài bao nhiêu? -->> Sports, 184 */

SELECT
a.title,
a.length,
c.name
FROM film AS a 
LEFT JOIN film_category AS b ON a.film_id = b.film_id
LEFT JOIN category AS c ON b. category_id= c. category_id
WHERE c.name IN ('Drama','Sports')
ORDER BY LENGTH(a.title) DESC

/*4--Đưa ra cái nhìn tổng quan về số lượng phim (tilte) trong mỗi danh mục (category).
Question:Thể loại danh mục nào là phổ biến nhất trong số các bộ phim? -->> Sports, 74 titles */

SELECT
c.name,
COUNT(DISTINCT a.title) AS film_counts
FROM film AS a 
LEFT JOIN film_category AS b ON a.film_id = b.film_id
LEFT JOIN category AS c ON b. category_id= c. category_id
GROUP BY c.name
ORDER BY COUNT(DISTINCT a.title) DESC

/*5--Đưa ra cái nhìn tổng quan về họ và tên của các diễn viên cũng như số lượng phim họ tham gia.
Question: Diễn viên nào đóng nhiều phim nhất?-->> SUSAN DAVIS, 54 films */

SELECT
a.first_name,
a.last_name,
COUNT(DISTINCT b.film_id) AS film_counts
FROM actor AS a
LEFT JOIN film_actor AS b	
ON a.actor_id = b.actor_id
GROUP BY a.first_name,a.last_name
ORDER BY COUNT(DISTINCT b.film_id) DESC

/*6--Tìm các địa chỉ không liên quan đến bất kỳ khách hàng nào.
Question: Có bao nhiêu địa chỉ như vậy?-->> 4 address with no customer matched */

SELECT
address_id
FROM address
EXCEPT
(SELECT address_id
FROM customer)

/*7--Danh sách các thành phố và doanh thu tương ừng trên từng thành phố 
Question:Thành phố nào đạt doanh thu cao nhất?-->> Cape Coral	221.55  */

SELECT
d.city,
SUM(a.amount) AS total_revenue
FROM payment AS a
LEFT JOIN customer AS b ON a.customer_id= b.customer_id 
LEFT JOIN address AS c ON b.address_id=c.address_id
LEFT JOIN city AS d ON c.city_id=d.city_id
GROUP BY d.city
ORDER BY SUM(a.amount) desc

/*8--Tạo danh sách trả ra 2 cột dữ liệu: 
-	cột 1: thông tin thành phố và đất nước ( format: “city, country")
-	cột 2: doanh thu tương ứng với cột 1
Question: thành phố của đất nước nào đat doanh thu cao nhất-->>  Cape Coral - United States 221.55 */

SELECT
CONCAT(e.country,', ', d.city ) as location,
SUM(a.amount) AS total_revenue
FROM payment AS a
LEFT JOIN customer AS b ON a.customer_id= b.customer_id 
LEFT JOIN address AS c ON b.address_id=c.address_id
LEFT JOIN city AS d ON c.city_id=d.city_id
LEFT JOIN country AS e ON d.country_id = e.country_id
GROUP BY location
ORDER BY SUM(a.amount) desc
