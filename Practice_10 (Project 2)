--GSHEET OUTPUT >> https://docs.google.com/spreadsheets/d/1mz2xPlUBEIr_zot11qcL9rp9pFgws0VOnQlDn3XJuWo/edit?usp=sharing

--1. Monthly Active Buyers & Orders? Trending?
SELECT
  CONCAT(EXTRACT(YEAR FROM created_at),'-',FORMAT_DATE("%m",created_at)) as order_month,
  COUNT(DISTINCT order_id) as order_count,
  COUNT(DISTINCT user_id) as buyer_count
FROM bigquery-public-data.thelook_ecommerce.orders
WHERE status = 'Complete'
GROUP BY order_month
ORDER BY order_month

--2. AOV & Monthly Active Buyers? Trending?
SELECT
  order_month,
  COUNT(DISTINCT user_id) as MAU,
  ROUND(AVG (user_aov),2) as monthly_aov
FROM (
  SELECT
    CONCAT(EXTRACT(YEAR FROM created_at),'-',FORMAT_DATE("%m",created_at)) as order_month,
    user_id,
    SUM(sale_price)/COUNT (DISTINCT order_id) as user_aov,
  FROM bigquery-public-data.thelook_ecommerce.order_items
  GROUP BY order_month, user_id
) AS monthly_aov
GROUP BY order_month
ORDER BY order_month

--3. Buyers by Age: Youngest? Oldest?

WITH age_filter as (
  SELECT
    id, first_name, last_name, gender, age,
    DENSE_RANK() OVER (PARTITION BY gender ORDER BY age ASC) as young_to_old,
    DENSE_RANK() OVER (PARTITION BY gender ORDER BY age DESC) as old_to_young,
  FROM bigquery-public-data.thelook_ecommerce.users
  ORDER BY gender,young_to_old
)
, age_group as (
  SELECT 
    id, first_name, last_name, gender, age,
    (CASE WHEN young_to_old =1 THEN "youngest" ELSE "oldest" END) as tag
  FROM age_filter
  WHERE young_to_old = 1 OR old_to_young =1
)
SELECT 
  gender, age,
  COUNT(DISTINCT id) as user_count
FROM age_group
GROUP BY gender, age

--4. Top SKUs
WITH top_monthly_items AS
  (SELECT 
  *,
  DENSE_RANK() OVER (PARTITION BY order_month ORDER BY profit DESC) as profit_rank
  FROM (
    SELECT
      CONCAT(EXTRACT(YEAR FROM o.created_at),'-',FORMAT_DATE("%m",o.created_at)) as order_month,
      o.product_id,
      p.name,
      SUM(p.retail_price) as rev,
      SUM(p.cost) as cost,
      SUM(p.retail_price) - SUM(p.cost) as profit
    FROM bigquery-public-data.thelook_ecommerce.order_items as o
    INNER JOIN bigquery-public-data.thelook_ecommerce.products as p
    ON o.product_id = p.id
    GROUP BY order_month,o.product_id,p.name
    )
  )
SELECT *
FROM top_monthly_items
WHERE profit_rank <=5
ORDER BY order_month ASC, profit DESC

--5. MTD Sale
SELECT
  category,order_date,
  ROUND(SUM(sale_price) OVER (PARTITION BY order_date,category ORDER BY order_date),2) AS revenue
FROM(
  SELECT
    FORMAT_TIMESTAMP('%Y-%m-%d', o.created_at) AS order_date,
    p.category,
    o.sale_price
  FROM bigquery-public-data.thelook_ecommerce.order_items AS o
  INNER JOIN bigquery-public-data.thelook_ecommerce.products AS p 
  ON o.product_id = p.id
  WHERE o.status <> 'Cancelled')
WHERE PARSE_DATE('%Y-%m-%d', order_date) <= DATE_SUB(CURRENT_DATE(), INTERVAL 90 DAY)
ORDER BY  category,order_date
